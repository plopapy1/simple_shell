#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <stdbool.h>
#include <signal.h>
#include "main.h"


char *b_pre_buffer(char *tok)
{
	char *b_pre = (char *)malloc(strlen(tok) + 1);
		if (b_pre == NULL)
	{
		printf("malloc failed\n");
		exit(1);
	}
		return (b_pre);
}



int what_if(char *av[])
{
	  pid_t pid;
	  int execstat;
		printf("ran fork\n");
	pid = fork();
	if (pid == -1)
	{
		perror("child failed\n");
		exit(-1);
	}
	if (pid == 0)
	{
	execstat = execve(av[0], av, NULL);
	if (execstat == -1)
	{
		perror(NULL);
		exit(-1);
	}
	}
	return (0);
}

